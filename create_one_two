def create_two_more_labels(self):
        """
        as we divided the ner to three sub-processes, so we need create labels
        for the total three precess.
        Step1: is a word is entity, a two class label
        Step2: a word is begin of entity, middle entity, end of entity or other,
               a five class label
        Step3: a NER problem

        return: add two more labels for Step1, and Step2

        for BMES schema
            for Step1:
                NO-ENTITY: 0
                ENTITY:    1

            for Step2:
                NO-ENTITY: 0
                B-ENTITY:  1
                M-ENTITY:  2
                E-ENTITY:  3
                S-ENTITY:  4

        same to BIO schema
            for Step1:
                NO-ENTITY: 0
                NO-ENTITY: 1

            for step2:
                NO-ENTITY: 0
                B-ENTITY: 1
                I-ENTITY: 2

        """

        if self.tagScheme == "BMES":
            ## for train
            train_label_texts = [texts[-1] for texts in self.train_texts]
            train_label_ids = [ids[-1] for ids in self.train_Ids]
            train_size = len(train_label_texts)
            assert train_size == len(train_label_ids)

            self.three_text_id = {}
            self.three_text_id['NO-ENTITY'] = 0
            self.three_labels = ['NO-ENTITY']

            label_length = {"PER": 2, "GPE": 2, "ORG": 5, "LOC": 3}

            id_num = 1
            inner_num = 0

            for i in range(train_size):
                one_label_texts = []
                two_label_texts = []
                three_label_texts = []
                one_label_ids = []
                two_label_ids = []
                three_label_ids = []

                for t_text, t_id in zip(train_label_texts[i], train_label_ids[i]):
                    t_text = t_text.upper()

                    if "PER" in t_text:
                        now_label = "PER"
                    elif "GPE" in t_text:
                        now_label = "GPE"
                    elif "ORG" in t_text:
                        now_label = "ORG"
                    elif "LOC" in t_text:
                        now_label = "LOC"

                    if t_text == 'O':
                        one_label_texts.append('NO-ENTITY')
                        two_label_texts.append('NO-ENTITY')
                        three_label_texts.append('NO-ENTITY')
                        one_label_ids.append(0)
                        two_label_ids.append(0)
                        three_label_ids.append(0)

                        inner_num = 0

                    elif "B-" in t_text:
                        one_label_texts.append("ENTITY")
                        one_label_ids.append(1)

                        two_label_texts.append("B-ENTITY")
                        two_label_ids.append(1)

                        if now_label not in self.three_text_id:
                            self.three_text_id[now_label] = id_num
                            self.three_labels.append(now_label)
                            id_num += 1
                        three_label_texts.append(now_label)
                        three_label_ids.append(self.three_text_id[now_label])

                        inner_num = 0

                    elif "M-" in t_text or "I-" in t_text:
                        one_label_texts.append("ENTITY")
                        one_label_ids.append(1)

                        two_label_texts.append("M-ENTITY")
                        two_label_ids.append(2)

                        if now_label not in self.three_text_id:
                            self.three_text_id[now_label] = id_num
                            self.three_labels.append(now_label)
                            id_num += 1
                        three_label_texts.append(now_label)
                        three_label_ids.append(self.three_text_id[now_label])


                    elif "E-" in t_text:
                        one_label_texts.append("ENTITY")
                        one_label_ids.append(1)

                        two_label_texts.append("E-ENTITY")
                        two_label_ids.append(3)

                        if now_label not in self.three_text_id:
                            self.three_text_id[now_label] = id_num
                            self.three_labels.append(now_label)
                            id_num += 1
                        three_label_texts.append(now_label)
                        three_label_ids.append(self.three_text_id[now_label])

                        inner_num = 0

                    elif "S-" in t_text:
                        one_label_texts.append("ENTITY")
                        one_label_ids.append(1)

                        two_label_texts.append("S-ENTITY")
                        two_label_ids.append(4)

                        if now_label not in self.three_text_id:
                            self.three_text_id[now_label] = id_num
                            self.three_labels.append(now_label)
                            id_num += 1
                        three_label_texts.append(now_label)
                        three_label_ids.append(self.three_text_id[now_label])

                        inner_num = 0

                # add the new label to train_texts and train_Ids
                self.train_texts[i].insert(-1, one_label_texts)
                self.train_texts[i].insert(-1, two_label_texts)
                self.train_texts[i].insert(-1, three_label_texts)
                self.train_Ids[i].insert(-1, one_label_ids)
                self.train_Ids[i].insert(-1, two_label_ids)
                self.train_Ids[i].insert(-1, three_label_ids)
            del train_label_texts
            del train_label_ids

            ## for dev
            dev_label_texts = [texts[-1] for texts in self.dev_texts]
            dev_label_ids = [ids[-1] for ids in self.dev_Ids]
            dev_size = len(dev_label_texts)
            assert dev_size == len(dev_label_ids)

            inner_num = 0

            for i in range(dev_size):
                one_label_texts = []
                two_label_texts = []
                three_label_texts = []
                one_label_ids = []
                two_label_ids = []
                three_label_ids = []
                for d_text, d_id in zip(dev_label_texts[i], dev_label_ids[i]):
                    d_text = d_text.upper()

                    if "PER" in d_text:
                        now_label = "PER"
                    elif "GPE" in d_text:
                        now_label = "GPE"
                    elif "ORG" in d_text:
                        now_label = "ORG"
                    elif "LOC" in d_text:
                        now_label = "LOC"

                    if d_text == 'O':
                        one_label_texts.append('NO-ENTITY')
                        two_label_texts.append('NO-ENTITY')
                        three_label_texts.append('NO-ENTITY')
                        one_label_ids.append(0)
                        two_label_ids.append(0)
                        three_label_ids.append(0)

                        inner_num = 0

                    elif "B-" in d_text:
                        one_label_texts.append("ENTITY")
                        one_label_ids.append(1)

                        two_label_texts.append("B-ENTITY")
                        two_label_ids.append(1)

                        if now_label not in self.three_text_id:
                            self.three_text_id[now_label] = id_num
                            self.three_labels.append(now_label)
                            id_num += 1
                        three_label_texts.append(now_label)
                        three_label_ids.append(self.three_text_id[now_label])

                        inner_num = 0

                    elif "M-" in d_text or "I-" in d_text:
                        one_label_texts.append("ENTITY")
                        one_label_ids.append(1)

                        two_label_texts.append("M-ENTITY")
                        two_label_ids.append(2)

                        if inner_num < label_length[now_label]:
                            inner_num += 1

                        if now_label not in self.three_text_id:
                            self.three_text_id[now_label] = id_num
                            self.three_labels.append(now_label)
                            id_num += 1
                        three_label_texts.append(now_label)
                        three_label_ids.append(self.three_text_id[now_label])

                    elif "E-" in d_text:
                        one_label_texts.append("ENTITY")
                        one_label_ids.append(1)

                        two_label_texts.append("E-ENTITY")
                        two_label_ids.append(3)

                        if now_label not in self.three_text_id:
                            self.three_text_id[now_label] = id_num
                            self.three_labels.append(now_label)
                            id_num += 1
                        three_label_texts.append(now_label)
                        three_label_ids.append(self.three_text_id[now_label])

                        inner_num = 0

                    elif "S-" in d_text:
                        one_label_texts.append("ENTITY")
                        one_label_ids.append(1)

                        two_label_texts.append("S-ENTITY")
                        two_label_ids.append(4)

                        if now_label not in self.three_text_id:
                            self.three_text_id[now_label] = id_num
                            self.three_labels.append(now_label)
                            id_num += 1
                        three_label_texts.append(now_label)
                        three_label_ids.append(self.three_text_id[now_label])

                        inner_num = 0

                # add the new label to train_texts and train_Ids
                self.dev_texts[i].insert(-1, one_label_texts)
                self.dev_texts[i].insert(-1, two_label_texts)
                self.dev_texts[i].insert(-1, three_label_texts)
                self.dev_Ids[i].insert(-1, one_label_ids)
                self.dev_Ids[i].insert(-1, two_label_ids)
                self.dev_Ids[i].insert(-1, three_label_ids)
            del dev_label_texts
            del dev_label_ids

            ## for test
            test_label_texts = [texts[-1] for texts in self.test_texts]
            test_label_ids = [ids[-1] for ids in self.test_Ids]
            test_size = len(test_label_texts)
            assert test_size == len(test_label_ids)

            inner_num = 0

            for i in range(test_size):
                one_label_texts = []
                two_label_texts = []
                three_label_texts = []
                one_label_ids = []
                two_label_ids = []
                three_label_ids = []
                for t_text, t_id in zip(test_label_texts[i], test_label_ids[i]):
                    t_text = t_text.upper()

                    if "PER" in d_text:
                        now_label = "PER"
                    elif "GPE" in d_text:
                        now_label = "GPE"
                    elif "ORG" in d_text:
                        now_label = "ORG"
                    elif "LOC" in d_text:
                        now_label = "LOC"

                    if t_text == 'O':
                        one_label_texts.append('NO-ENTITY')
                        two_label_texts.append('NO-ENTITY')
                        three_label_texts.append('NO-ENTITY')
                        one_label_ids.append(0)
                        two_label_ids.append(0)
                        three_label_ids.append(0)

                        inner_num = 0

                    elif "B-" in t_text:
                        one_label_texts.append("ENTITY")
                        one_label_ids.append(1)

                        two_label_texts.append("B-ENTITY")
                        two_label_ids.append(1)

                        if now_label not in self.three_text_id:
                            self.three_text_id[now_label] = id_num
                            self.three_labels.append(now_label)
                            id_num += 1
                        three_label_texts.append(now_label)
                        three_label_ids.append(self.three_text_id[now_label])

                        inner_num = 0

                    elif "M-" in t_text or "I-" in t_text:
                        one_label_texts.append("ENTITY")
                        one_label_ids.append(1)

                        two_label_texts.append("M-ENTITY")
                        two_label_ids.append(2)

                        if now_label not in self.three_text_id:
                            self.three_text_id[now_label] = id_num
                            self.three_labels.append(now_label)
                            id_num += 1
                        three_label_texts.append(now_label)
                        three_label_ids.append(self.three_text_id[now_label])


                    elif "E-" in t_text:
                        one_label_texts.append("ENTITY")
                        one_label_ids.append(1)

                        two_label_texts.append("E-ENTITY")
                        two_label_ids.append(3)

                        if now_label not in self.three_text_id:
                            self.three_text_id[now_label] = id_num
                            self.three_labels.append(now_label)
                            id_num += 1
                        three_label_texts.append(now_label)
                        three_label_ids.append(self.three_text_id[now_label])

                        inner_num = 0

                    elif "S-" in t_text:
                        one_label_texts.append("ENTITY")
                        one_label_ids.append(1)

                        two_label_texts.append("S-ENTITY")
                        two_label_ids.append(4)

                        if now_label not in self.three_text_id:
                            self.three_text_id[now_label] = id_num
                            self.three_labels.append(now_label)
                            id_num += 1
                        three_label_texts.append(now_label)
                        three_label_ids.append(self.three_text_id[now_label])

                        inner_num = 0

                # add the new label to train_texts and train_Ids
                self.test_texts[i].insert(-1, one_label_texts)
                self.test_texts[i].insert(-1, two_label_texts)
                self.test_texts[i].insert(-1, three_label_texts)
                self.test_Ids[i].insert(-1, one_label_ids)
                self.test_Ids[i].insert(-1, two_label_ids)
                self.test_Ids[i].insert(-1, three_label_ids)
            del test_label_texts
            del test_label_ids

            # for key in self.three_text_id:
            #     self.three_labels.append(key)
            #     # self.three_labels[self.three_text_id[key]] = key

        elif self.tagScheme == "BIO":
            ## for train
            train_label_texts = [texts[-1] for texts in self.train_texts]
            train_label_ids = [ids[-1] for ids in self.train_Ids]
            train_size = len(train_label_texts)
            assert train_size == len(train_label_ids)

            for i in range(train_size):
                one_label_texts = []
                two_label_texts = []
                three_label_texts = []
                one_label_ids = []
                two_label_ids = []
                three_label_ids = []
                for t_text, t_id in zip(train_label_texts[i], train_label_ids[i]):
                    t_text = t_text.upper()
                    if t_text == 'O':
                        one_label_texts.append('NO-ENTITY')
                        two_label_texts.append('NO-ENTITY')
                        three_label_texts.append('NO-ENTITY')
                        one_label_ids.append(0)
                        two_label_ids.append(0)
                        three_label_ids.append(0)
                    elif "B-" in t_text:
                        one_label_texts.append("ENTITY")
                        one_label_ids.append(1)

                        two_label_texts.append("B-ENTITY")
                        two_label_ids.append(1)

                        if t_text.split('-')[1] not in self.three_text_id:
                            self.three_text_id[t_text.split('-')[1]] = id_num
                            id_num += 1
                        three_label_texts.append(t_text.split('-')[1])
                        three_label_ids.append(self.three_text_id[t_text.split('-')[1]])

                    elif "I-" in t_text:
                        one_label_texts.append("ENTITY")
                        one_label_ids.append(1)

                        two_label_texts.append("I-ENTITY")
                        two_label_ids.append(2)

                        if t_text.split('-')[1] not in self.three_text_id:
                            self.three_text_id[t_text.split('-')[1]] = id_num
                            id_num += 1
                        three_label_texts.append(t_text.split('-')[1])
                        three_label_ids.append(self.three_text_id[t_text.split('-')[1]])

                # add the new label to train_texts and train_Ids
                self.train_texts[i].insert(-1, one_label_texts)
                self.train_texts[i].insert(-1, two_label_texts)
                self.train_texts[i].insert(-1, three_label_texts)
                self.train_Ids[i].insert(-1, one_label_ids)
                self.train_Ids[i].insert(-1, two_label_ids)
                self.train_Ids[i].insert(-1, three_label_ids)
            del train_label_texts
            del train_label_ids

            ## for dev
            dev_label_texts = [texts[-1] for texts in self.dev_texts]
            dev_label_ids = [ids[-1] for ids in self.dev_Ids]
            dev_size = len(dev_label_texts)
            assert dev_size == len(dev_label_ids)

            for i in range(dev_size):
                one_label_texts = []
                two_label_texts = []
                three_label_texts = []
                one_label_ids = []
                two_label_ids = []
                three_label_ids = []
                for d_text, d_id in zip(dev_label_texts[i], dev_label_ids[i]):
                    d_text = d_text.upper()
                    if d_text == 'O':
                        one_label_texts.append('NO-ENTITY')
                        two_label_texts.append('NO-ENTITY')
                        three_label_texts.append('NO-ENTITY')
                        one_label_ids.append(0)
                        two_label_ids.append(0)
                        three_label_ids.append(0)
                    elif "B-" in d_text:
                        one_label_texts.append("ENTITY")
                        one_label_ids.append(1)

                        two_label_texts.append("B-ENTITY")
                        two_label_ids.append(1)

                        three_label_texts.append(d_text.split('-')[1])
                        three_label_ids.append(self.three_text_id[d_text.split('-')[1]])

                    elif "I-" in d_text:
                        one_label_texts.append("ENTITY")
                        one_label_ids.append(1)

                        two_label_texts.append("I-ENTITY")
                        two_label_ids.append(2)

                        three_label_texts.append(d_text.split('-')[1])
                        three_label_ids.append(self.three_text_id[d_text.split('-')[1]])

                # add the new label to train_texts and train_Ids
                self.dev_texts[i].insert(-1, one_label_texts)
                self.dev_texts[i].insert(-1, two_label_texts)
                self.dev_texts[i].insert(-1, three_label_texts)
                self.dev_Ids[i].insert(-1, one_label_ids)
                self.dev_Ids[i].insert(-1, two_label_ids)
                self.dev_Ids[i].insert(-1, three_label_ids)
            del dev_label_texts
            del dev_label_ids

            ## for test
            test_label_texts = [texts[-1] for texts in self.test_texts]
            test_label_ids = [ids[-1] for ids in self.test_Ids]
            test_size = len(test_label_texts)
            assert test_size == len(test_label_ids)

            for i in range(test_size):
                one_label_texts = []
                two_label_texts = []
                three_label_texts = []
                one_label_ids = []
                two_label_ids = []
                three_label_ids = []
                for t_text, t_id in zip(test_label_texts[i], test_label_ids[i]):
                    t_text = t_text.upper()
                    if t_text == 'O':
                        one_label_texts.append('NO-ENTITY')
                        two_label_texts.append('NO-ENTITY')
                        three_label_texts.append('NO-ENTITY')
                        one_label_ids.append(0)
                        two_label_ids.append(0)
                        three_label_ids.append(0)
                    elif "B-" in t_text:
                        one_label_texts.append("ENTITY")
                        one_label_ids.append(1)

                        two_label_texts.append("B-ENTITY")
                        two_label_ids.append(1)

                        three_label_texts.append(t_text.split('-')[1])
                        three_label_ids.append(self.three_text_id[t_text.split('-')[1]])

                    elif "I-" in t_text:
                        one_label_texts.append("ENTITY")
                        one_label_ids.append(1)

                        two_label_texts.append("I-ENTITY")
                        two_label_ids.append(2)

                        three_label_texts.append(t_text.split('-')[1])
                        three_label_ids.append(self.three_text_id[t_text.split('-')[1]])

                # add the new label to train_texts and train_Ids
                self.test_texts[i].insert(-1, one_label_texts)
                self.test_texts[i].insert(-1, two_label_texts)
                self.test_texts[i].insert(-1, three_label_texts)
                self.test_Ids[i].insert(-1, one_label_ids)
                self.test_Ids[i].insert(-1, two_label_ids)
                self.test_Ids[i].insert(-1, three_label_ids)
            del test_label_texts
            del test_label_ids

            for key in self.three_text_id:
                self.three_labels.append(key)

